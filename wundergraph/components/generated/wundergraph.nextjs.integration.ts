// Code generated by wunderctl. DO NOT EDIT.

import type {} from "./models";
import { createContext } from "react";
import {
	QueryArgsWithInput,
	SubscriptionArgs,
	SubscriptionArgsWithInput,
	hooks,
	WunderGraphContextProperties,
	Client,
} from "@wundergraph/sdk/dist/nextjs";

export type Role = "superadmin" | "admin" | "user";

export enum AuthProvider {
	"github" = "github",
	"authing" = "authing",
	"fosite" = "fosite",
}

export const AuthProviders = {
	github: AuthProvider.github,
	authing: AuthProvider.authing,
	fosite: AuthProvider.fosite,
};

export enum S3Provider {
	"minio" = "minio",
}

const defaultWunderGraphContextProperties: WunderGraphContextProperties<Role> = {
	ssrCache: {},
	client: new Client({
		applicationHash: "f421e637",
		applicationPath: "api/main",
		baseURL: "http://localhost:9991",
		sdkVersion: "1.0.0-next.32",
	}),
	user: null,
	setUser: (value) => {},
	isWindowFocused: "pristine",
	setIsWindowFocused: (value) => {},
	refetchMountedOperations: 0,
	setRefetchMountedOperations: (value) => {},
};

export const WunderGraphContext = createContext<WunderGraphContextProperties<Role>>(
	defaultWunderGraphContextProperties
);

export const withWunderGraph = hooks.withWunderGraphContextWrapper(
	WunderGraphContext,
	defaultWunderGraphContextProperties
);

export const useWunderGraph = hooks.useWunderGraph<Role, AuthProvider, S3Provider>(WunderGraphContext);

export const useQuery = {};

export const useMutation = {};

export const useSubscription = {};

export const useLiveQuery = {};
